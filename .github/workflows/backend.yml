name: PPL API deployment

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  azure-provider:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Azure login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Get Publish Profile
        run: |
          echo "::set-output name=PUBLISH_PROFILE::$(az webapp deployment list-publishing-profiles -g ${{ steps.terraform-apply.outputs.resource_group_name}} -n ${{steps.terraform-apply.outputs.web_app_name}} --xml)"
        id: getPublishProfile

    outputs:
        webapp_publish_profile: ${{ steps.getPublishProfile.outputs.PUBLISH_PROFILE }}

  build-api:
    runs-on: 'ubuntu-latest'
    needs: azure-provider

    steps:
      - name: checkout repository
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to registry
        uses: docker/login-action@v2
        with:
            registry: https://utils.azurecr.io/
            username: ${{ secrets.AzureAppService_ContainerUsername}}
            password: ${{ secrets.AzureAppService_ContainerPassword}}

      - name: Build and push container image to registry
        uses: docker/build-push-action@v3
        with:
            push: true
            context: ./services/backend/
            tags: utils.azurecr.io/${{ secrets.AzureAppService_ContainerUsername}}/ppl-api:${{ github.sha }}
            file: ./services/backend/api.Dockerfile

  deploy-api:
    runs-on: ubuntu-latest
    needs: [build-api, azure-provider]
    environment:
      name: 'production'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}

    steps:
      - name: Deploy to Azure Web App
        id: deploy-to-webapp
        uses: azure/webapps-deploy@v2
        with:
          app-name: 'ppl-api'
          slot-name: 'development'
          publish-profile: ${{ needs.azure-provider.outputs.webapp_publish_profile}}
          images: 'utils.azurecr.io/${{ secrets.AzureAppService_ContainerUsername}}/ppl-api:${{ github.sha }}'
